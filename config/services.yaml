# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    items_per_page: 20
    # env(DATABASE_URL): 'foo'  # A éviter de faire car par sécure

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            string $confKey: 'foo'
            int $itemsPerPage: '%items_per_page%'   #valeur par défaut définie dans les paramètres que l'on peut appeler n'import où maintenant
            # Permet de récupérer la version du symfony que l'on veut dumper dans le HelloControler comme une variable d'environnement (env.local)
            string $sfVersion: '%env(key:require:key:symfony:key:extra:json:file:resolve:COMPOSER_PATH)%'   
            #pour mettre le site en maintenance
            bool $isMaintenance: '%env(bool:APP_MAINTENANCE)%'

            
    # _instanceof:
    #     App\Notifier\Factory\IterableNotificationFactoryInterface:
    #         tags: [{ name: app.notification_factory }]
    #   Ces 3 lignes peuvent être supprimer à cause de l'ajout dans le fichier IterableNotificationFactoryInterface de l'attribut #[AutoconfigureTag(name: 'app.notification')] avant l'interface

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # app.my_service:
    #     class: App\MyService
    #     arguments:
    #         $manager: '@doctrine.orm.default_entity_manager'
    #         $confKey: 'foo'
    #     Cette configuration ne marchera pas à cause de l'autowiring
    # =====>
    # App\MyService:
    #     arguments:
    #         # $manager: '@doctrine.orm.default_entity_manager'     #Cette ligne n'est pas obligatoire car l'entityManager est déjà un service et grace à l'autowiring il le retrouve tout seul
    #         $confKey: 'foo'    Cette valeur si elle est utilisée plusieurs fois dans différents services on peut la "binder" et à chaque fois que Symfony en aura besoin il ira la retrouver voir ligne 13


    App\Notifier\Factory\ChaineNotificationFactory:
        arguments:
            $factories: !tagged_iterator app.notification_factory   #Permet d'injecter dans le service toutes les factories (array) regroupées sous le tag défini ligne 18, 1 pour chaque notifier
